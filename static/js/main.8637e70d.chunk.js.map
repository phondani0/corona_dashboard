{"version":3,"sources":["components/DataTable.js","components/DataDetails.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["columns","id","label","align","format","value","toLocaleString","useStyles","makeStyles","root","width","height","container","maxHeight","table","tableHead","padding","tableCell","DataTable","data","updateDataDetails","rows","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","className","TableContainer","Table","stickyHeader","aria-label","size","TableHead","TableRow","map","column","TableCell","key","style","minWidth","TableBody","slice","row","i","hover","role","tabIndex","onClick","event","console","log","rowClickHandler","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","target","BorderLinearProgress","withStyles","backgroundColor","lighten","bar","borderRadius","LinearProgress","theme","flexGrow","margin","marginTop","marginBottom","header","paddingTop","fontWeight","gridBody","fontSize","DataDetails","Box","country_name","Grid","direction","spacing","justify","item","xs","sm","cases","variant","color","deaths","total_recovered","new_deaths","new_cases","serious_critical","active_cases","total_cases_per_1m_population","Dashboard","setData","dataDetails","setDataDetails","useEffect","axios","then","response","dataList","countries_stat","worldData","world_total","world","total_cases","total_deaths","unshift","catch","error","Fragment","lg","mb","mt","App","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8637e70d.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst columns = [\n  { id: 'country_name', label: 'Region' },\n  { id: 'cases', label: 'Cases', },\n  {\n    id: 'deaths',\n    label: 'Death',\n    align: 'right',\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: 'total_recovered',\n    label: 'Recovered',\n    align: 'right',\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  container: {\n    maxHeight: '52vh',\n  },\n  table: {\n  },\n  tableHead: {\n    padding: \"6px 12px 6px 12px\"\n  },\n  tableCell: {\n    padding: \"7px 12px 7px 12px\"\n  }\n});\n\nfunction DataTable({ data, updateDataDetails }) {\n  const rows = data;\n  // console.log(props.data);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const rowClickHandler = (event, data) => {\n    console.log('row Clicked', data);\n    updateDataDetails(data);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow  >\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  className={classes.tableHead}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={i}\n                  onClick={(event) => rowClickHandler(event, row)}\n                >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align} className={classes.tableCell}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 40]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nexport default DataTable\n","import React from 'react';\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 10,\n    backgroundColor: lighten('#ff6c5c', 0.5),\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#ff6c5c',\n  },\n})(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  margin: {\n    marginTop: 4,\n    marginBottom: 4,\n  },\n  header: {\n    paddingTop: 10,\n    fontWeight: \"bold\"\n  },\n  gridBody: {\n    fontSize: 14,\n    padding: 10\n  }\n}));\n\nfunction DataDetails({ data }) {\n  const classes = useStyles();\n  return (\n    <Box>\n      <Paper>\n        <div className={classes.header}>{data.country_name}</div>\n        <Grid\n          container\n          direction=\"row\"\n          className={classes.gridBody}\n          spacing={2}\n          justify=\"space-evenly\"\n        >\n\n          <Grid\n            item\n            container\n            direction=\"column\"\n            xs={6}\n            spacing={1}\n          >\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  Total cases\n            </Grid>\n                <Grid item>\n                  {data.cases}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  Deaths\n                  </Grid>\n                <Grid item>\n                  {data.deaths}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  Recovered\n            </Grid>\n                <Grid item>\n                  {data.total_recovered}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  New deaths\n            </Grid>\n                <Grid item>\n                  {data.new_deaths}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            container\n            direction=\"column\"\n            xs={6}\n            spacing={1}\n          >\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  New cases\n            </Grid>\n                <Grid item>\n                  {data.new_cases}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  Serious critical\n            </Grid>\n                <Grid item>\n                  {data.serious_critical}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item >\n                  Active cases\n                </Grid>\n                <Grid item>\n                  {data.active_cases}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid item xs>\n              <Grid\n                item\n                xs={12}\n                sm\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  Cases per 1 M\n                </Grid>\n                <Grid item>\n                  {data.total_cases_per_1m_population}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <BorderLinearProgress\n                  className={classes.margin}\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={50}\n                />\n              </Grid>\n            </Grid>\n\n          </Grid>\n\n        </Grid>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default DataDetails;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DataTable from './DataTable';\nimport DataDetails from './DataDetails';\nimport { Box, Grid } from '@material-ui/core';\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  const [dataDetails, setDataDetails] = useState([]);\n\n  useEffect(() => {\n    axios({\n      \"method\": \"GET\",\n      \"url\": \"https://corona-virus-world-and-india-data.p.rapidapi.com/api\",\n      \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"corona-virus-world-and-india-data.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c9ef826454msh3a40987d9db9f02p13b340jsna09a6f332d48\"\n      }\n    })\n      .then((response) => {\n        // console.log(response);\n        const dataList = response.data.countries_stat;\n        const worldData = response.data.world_total;\n        const world = {\n          'country_name': 'World',\n          'cases': worldData.total_cases,\n          'deaths': worldData.total_deaths,\n          'total_recovered': worldData.total_recovered,\n          'new_cases': worldData.new_cases,\n          'new_deaths': worldData.new_deaths,\n        }\n\n        dataList.unshift(world);\n        setData(dataList);\n        setDataDetails(world);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n\n  const updateDataDetails = (data) => {\n    setDataDetails(data);\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justify=\"center\"\n      >\n        <Grid item xs lg={10} mb={2}>\n          <Box>\n            <DataDetails data={dataDetails} />\n          </Box>\n          <Box mt={4}>\n            <DataTable data={data} updateDataDetails={updateDataDetails} />\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Dashboard;\n\n","import React from 'react';\nimport './App.css';\nimport Container from '@material-ui/core/Container';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"lg\">\n        <header>\n          <h3>Corona Dashboard</h3>\n        </header>\n        <Dashboard />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}